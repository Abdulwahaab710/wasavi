wasavi (VI editor for any web page)
====================================

これはなに？
------------

wasavi はいくつかの web ブラウザ用のエクステンションで、web ページ上の textarea
要素を vi エディタ化します。

wasavi はほぼすべての vi コマンド、およびいくつかの ex コマンドをサポートします。

wasavi の作成は継続中です。機能の要請やバグ情報はどんなものでも歓迎します！



スクリーンショット
------------

* ネイティブな textarea があったとき:
  ![native textarea](http://appsweets.net/wasavi/wasavi_native_textarea.jpg)

* Ctrl+Enter を押すと wasavi が起動します:
  ![wasavi running](http://appsweets.net/wasavi/wasavi.jpg)

* ex コマンドもいくつかサポートしています。:set all したところ:
  ![set all](http://appsweets.net/wasavi/wasavi_set_all.jpg)

* vim からインクリメンタルサーチをポートしています:
  ![incremental search](http://appsweets.net/wasavi/wasavi_incremental_search.jpg)

* <http://wasavi.appsweets.net/> は特別なアドレスです。wasavi をインストールした
  ブラウザでこのアドレスを開くと、自動的に wasavi が起動します。
  この状態では、dropbox に対するファイルの読み書きが可能です。
  ![stand alone](http://appsweets.net/wasavi/wasavi_stand_alone.png)



インストール
------------

現在、以下の web ブラウザ用のエクステンションが用意されています。

* Google Chrome

  <https://chrome.google.com/webstore/detail/dgogifpkoilgiofhhhodbodcfgomelhe?hl=ja>

* Opera

  <https://addons.opera.com/ja/extensions/details/wasavi/>

* Firefox

  <https://addons.mozilla.org/ja/firefox/addon/wasavi/>

以上のブラウザ用のエクステンションの標準的なインストール方法に従って導入してく
ださい。ただし、Opera 版は試験公開です。Opera が DOM3 Composition Event に対応
していないので insert モードにおいて IME を経由した入力が正しく機能しません。

Google Chrome において、github に公開されているソースを実行する場合は、「パッ
ケージ化されていない拡張機能を読み込む...」で manifest.json を与えてください。

ソースコードは <https://github.com/akahuku/wasavi> で管理しています。
最新の開発バージョンは <http://appsweets.net/wasavi/> にあります。



使い方
------

### textarea の拡張

適当な web ページの textarea 要素にフォーカスがある状態で Ctrl+Enter、もしくは
Insert を押下してください。言うまでもありませんが、終了するには ZZ、:q、:wq
などを入力します。

### Firefox で、vimperator の環境下で使う

<https://raw.github.com/akahuku/wasavi/master/mediators/vimperator/wasavi_mediator.js>
を vimperator のプラグインディレクトリ（~/.vimperator/plugin、もしくは
%HOME%\vimperator\plugin）に置いてください。このプラグインは wasavi の状態に
従って vimperator のパススルーモードを制御します。

また、<http://wasavi.appsweets.net/> を利用する場合は、vimperator に対して
`:ignorekeys add ^http://wasavi\\.appsweets\\.net/` を与えてください。このページは
常にパススルーモードになります。

ignorekeys コマンドの設定は自動的に保存されるので、コマンドは 1 度実行すれば十分です。

### 単体のテキストエディタとしての利用

<http://wasavi.appsweets.net/> へアクセスします。自動的に wasavi が起動します。
この状態では、ex コマンド edit、read、file、write が有効です。これらのコマンドは
dropbox 上のファイルを読み書きすることができます。



* * *



実装済みコマンド
--------------------

* [count] operation [count] motion
* [count] operation [count] range-symbol
* [count] operation-alias
* [count] motion
* [count] scroll-command
* [count] edit-command
* : ex-command

### operation:

* c y d &gt; &lt;

### operation-alias:

* cc yy dd &gt;&gt; &lt;&lt; C Y D 

### motion:

* &#45; &#43; ^ &lt;home&gt; $ &lt;end&gt; % | comma(,) ;
  &#95; / ? ' ` ( ) { } [[ ]] &lt;enter&gt; 0
  j k h l ^N ^P ^H
  &lt;down&gt; &lt;up&gt; &lt;left&gt; &lt;right&gt; &lt;space&gt;
  w W b B e E gg gj gk g^ g$ G H M L f F t T n N

### range-symbol（vim の "テキストオブジェクト"）:

* a" a' a` a[ a] a{ a} aB a< a> a( a) ab aw aW ap as
* i" i' i` i[ i] i{ i} iB i< i> i( i) ib iw iW ip is

### scroll-command:

* ^U ^D ^Y ^E ^B ^F &lt;pageup&gt; &lt;pagedown&gt;
  z&lt;enter&gt; z. zz z-

### edit-command:

* x X &lt;delete&gt; p P J period( . ) u ^R ~ ^L ^G m @ r R
  a A i I o O & s S ZZ

### ex-command:

* abbreviate copy delete edit file global join k map mark marks move
  options print put quit read redo s & ~ set registers to
  unabbreviate undo unmap version v write wq xit yank
  > < @ &#42;

ex コマンドのアドレス指定は絶対行番号、相対行番号、正規表現のいずれも可能です。
オフセットを付加することも可能です。



* * *

vim 互換の機能
------------

* 多段 undo/redo
* インクリメンタルサーチ
* レンジシンボル（vim で言うところのテキストオブジェクト）
* レジスタ "、:、*、/（特に * はクリップボードとのアクセスを行うので重要です）
* オプション iskeyword、incsearch、smartcase、undolevels、quoteescape



* * *

tips
------------

* wasavi の最大化: `:set fullscreen` or `:set fs`
* wasavi を元に戻す: `:set nofullscreen` or `:set nofs`
* カラーテーマを変える: `:set theme=blight` or `:set theme=charcoal`
* 初期設定を変更する:
  各ブラウザのエクステンション管理機能から wasavi の設定ページを開き
  （または wasavi 上で `:options` と入力）、"exrc" テキストボックスを
  編集する
* :abbreviate の文法は:
	+ `:abbreviate` は、登録されている全ての略語を表示します
	+ `:abbreviate [clear]` は、全ての略語を削除します
	+ `:abbreviate lhs` は、lhs に対応する略語を表示します
	+ `:abbreviate lhs rhs` は、lhs を rhs に展開する
	  略語を登録します
* :map の文法は:
	+ `:map` は、登録されている全てのマップを表示します
	+ `:map [clear]` は、全てのマップを削除します
	+ `:map lhs rhs` は、lhs を rhs に変換するマップを登録します。
	  この変換は再帰します
	+ `:map [noremap] lhs rhs` も登録しますが、こちらは再帰しません
	+ `:map` はノーマルモード用のマップを対象とします。一方、
	  `:map!` は挿入モード用です
* j k $ ^ はカーソルを物理行単位で移動させます。一方、
  gj gk g$ g^ は折り返し行単位で移動させます。
  この振る舞いを交換するには: `:set jkdenotative`



* * *

バグってる！
------------

ぜひ現象と再現方法を教えてください。
バグレポートや要望の受け付けは以下の場所で行います。

* <http://appsweets.net/wasavi/#forum>

github のアカウントを持っているなら issue でも構いません。

* <http://github.com/akahuku/wasavi/issues>
